@model ProductDetailsModel
@using SmartStore.Web.Models.Catalog;
@using SmartStore.Core.Domain.Orders;
@using SmartStore.Core.Infrastructure;
@using SmartStore.Core;
@using System.Text;
@using System.Globalization;
@using SmartStore.Services.Customers;
@using SmartStore.Services.Security;
@using SmartStore.Web;
@using SmartStore.Utilities;
@using Telerik;
@using SmartStore.Web.Framework.Events;
@using SmartStore.Core.Events;

@{
    var storeUrl = EngineContext.Current.Resolve<IWebHelper>().GetStoreLocation(false);

    DateTime courtDateNow = ViewData["CourtDateNow_" + Model.Id] == null ? DateTime.Now : ViewData["CourtDateNow_" + Model.Id].Convert<DateTime>();

    var dayControl = Model.ProductVariantAttributes.FirstOrDefault(o => o.Alias == "Day");
    string dayControlId = string.Format("product_attribute_{0}_{1}_{2}_{3}", dayControl.ProductId, dayControl.BundleItemId, dayControl.ProductAttributeId, dayControl.Id);
    string textPromptDayControl = !string.IsNullOrEmpty(dayControl.TextPrompt) ? dayControl.TextPrompt : dayControl.Name;
    var startControl = Model.ProductVariantAttributes.FirstOrDefault(o => o.Alias == "Start");
    string startControlId = string.Format("product_attribute_{0}_{1}_{2}_{3}", startControl.ProductId, startControl.BundleItemId, startControl.ProductAttributeId, startControl.Id);
    var endControl = Model.ProductVariantAttributes.FirstOrDefault(o => o.Alias == "End");
    string endControlId = string.Format("product_attribute_{0}_{1}_{2}_{3}", endControl.ProductId, endControl.BundleItemId, endControl.ProductAttributeId, endControl.Id);
    var invTypeCodeControl = Model.ProductVariantAttributes.FirstOrDefault(o => o.Alias == "InvTypeCode");
    string invTypeCodeControlId = string.Format("product_attribute_{0}_{1}_{2}_{3}", invTypeCodeControl.ProductId, invTypeCodeControl.BundleItemId, invTypeCodeControl.ProductAttributeId, invTypeCodeControl.Id);
}
<div class="attributes">
    <div class="control-group">
        <label class="control-label" for="SportField">Field</label>
        @Html.DropDownList("SportField", new List<SelectListItem>(), new { style = "width: 250px" })
    </div>
    <div class="control-group">
        <label class='control-label@(dayControl.IsRequired ? " required" : "")' for="@(dayControlId)">@textPromptDayControl</label>
        @if (!string.IsNullOrEmpty(dayControl.Description))
        {
            <div class="attribute-description">
                @Html.Raw(dayControl.Description)
            </div>
        }

        <div class="controls">
            @Html.DatePickerDropDowns(dayControlId + "_day", dayControlId + "_month", dayControlId + "_year", courtDateNow.Year, courtDateNow.Year+1, courtDateNow.Day, courtDateNow.Month, courtDateNow.Year, true, dayControl.IsDisabled)
            <input id="@(startControlId)" name="@(startControlId)" type="hidden" class="hidden spc-start" />
            <input id="@(endControlId)" name="@(endControlId)" type="hidden" class="hidden spc-end" />
            <input id="@(invTypeCodeControlId)" name="@(invTypeCodeControlId)" type="hidden" class="hidden spc-invtypecode" />
            <input id="product_id" name="product_id" type="hidden" class="hidden" value="@Model.Id"/>
        </div>
    </div>
    <div class="control-group">
        <label class='control-label@(invTypeCodeControl.IsRequired ? " required" : "")' for="@(invTypeCodeControl)">Schedules</label>
        <div class="btn-group btn-group-vertical spc-schedules">
            @*<a class="btn disabled">07:00 - 08:00 | Rp. 150,000.00</a>
            <a class="btn btn-warning add-to-cart-button ajax-cart-link"
                href="#"
			    rel="nofollow"
                data-href='@Url.Action("AddProduct", "ShoppingCart", new { productId = Model.AddToCart.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })' 
                data-form-selector="#product-details-form"
                data-type="cart"
                data-action="add"> 
                08:00 - 09:00 | Rp. 150,000.00
            </a>
            <a class="btn btn-success add-to-cart-button ajax-cart-link"
               href="#"
               rel="nofollow"
               data-href='@Url.Action("AddProduct", "ShoppingCart", new { productId = Model.AddToCart.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })'
               data-form-selector="#product-details-form"
               data-type="cart"
               data-action="add">
                09:00 - 10:00 | Rp. 150,000.00
            </a>*@
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {

        function loadFields()
        {
            var ddlStates = $("#attributes_@(Model.Id)_SportField");
            $.ajax({
                cache: false,
                type: "GET",
                url: "@Url.RouteUrl("Lince.SportCenter.Default", new { controller = "PublicCommon", action = "GetFields" })",
                data: { "product": @(Model.Id), "addEmptyIfRequired": false },
                success: function (data) {
                    if(data == null)
                        return;

                    ddlStates.html('');
                    $.each(data, function (id, option) {
                        ddlStates.append($('<option></option>').val(option.id).html(option.name));
                    });
                    ddlStates.trigger("change");
                    //ddlStates.val(data[0].id);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });

        }

        $("#attributes_@(Model.Id)_SportField").change(function(e){
            refreshSchdules();
        });

        function refreshSchdules() {
            /// SportCenterCourt in public.product-detail-court.js
            SportCenterCourt.refreshSchedules(@Model.Id,
                $("select[name='@(dayControlId + "_day")'] option:selected"),
                $("select[name='@(dayControlId + "_month")'] option:selected"),
                $("select[name='@(dayControlId + "_year")'] option:selected"),
                $("#@startControlId"),
                $("#@endControlId"),
                $("#@invTypeCodeControlId"),
                '@Url.Action("AddProduct", "ShoppingCart", new { productId = Model.AddToCart.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })',
                '@Url.RouteUrl("Lince.SportCenter.Default", new { controller = "PublicCommon", action = "SearchAvails" })',
                $("#attributes_@(Model.Id)_SportField").val()
            );
        }

        loadFields();

        @*$("select[name='@(dayControlId + "_day")']").ready(function(){
            refreshSchdules();
        });*@


        $("select[name='@(dayControlId + "_day")'").change(function() {
            refreshSchdules();
        });

        $("select[name='@(dayControlId + "_month")'").change(function() {
            refreshSchdules();
        });

        $("select[name='@(dayControlId + "_year")'").change(function() {
            refreshSchdules();
        });
    });
</script>