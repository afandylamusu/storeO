@model DestinationItemModel
@using Telerik.Web.Mvc.UI;
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.StateProvinceId)
@if (ViewBag.RefreshPage == true)
{
    <script type="text/javascript">
        try {window.opener.document.forms['@(ViewBag.formId)'].@(ViewBag.btnId).click();}
        catch (e){}
        window.close();
    </script>
}
<script type="text/javascript">
        $(function() {
            $("#@Html.FieldIdFor(model => model.DestinationTypeId)").change(function() {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.ParentId)")
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetParentsByType", "Destination"))",
                    data: { "desttype": selectedItem, "stateId": @Model.StateProvinceId, "addEmptyIfRequired": "true" },
                    success: function(data) {
                        ddlStates.html('');
                        $.each(data, function(id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        ddlStates.trigger("change");
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                    }
                });
            });
        });
</script>

@(Html.LocalizedEditor<DestinationItemModel, DestinationItemLocalizedModel>("destination-localized",
    @<table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Locales[item].Name)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.Locales[item].Name)
                @Html.ValidationMessageFor(model => model.Locales[item].Name)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                @Html.HiddenFor(model => model.Locales[item].LanguageId)
            </td>
        </tr>
    </table>
,
    @<table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Name)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </td>
        </tr>
    </table>
))
<table class="adminContent">
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.DestinationTypeId)
        </td>
        <td class="adminData">
            @Html.DropDownListFor(model => model.DestinationTypeId, Model.DestinationType.ToSelectList())
            @Html.ValidationMessageFor(model => model.DestinationTypeId)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ParentId)
        </td>
        <td class="adminData">
            @Html.DropDownListFor(model => model.ParentId, Model.AvailableParents)
            @Html.ValidationMessageFor(model => model.ParentId)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.Abbreviation)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.Abbreviation)
            @Html.ValidationMessageFor(model => model.Abbreviation)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.GeoLat)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.GeoLat)
            @Html.ValidationMessageFor(model => model.GeoLat)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.GeoLang)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.GeoLang)
            @Html.ValidationMessageFor(model => model.GeoLang)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.Published)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.Published)
            @Html.ValidationMessageFor(model => model.Published)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.DisplayOrder)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.DisplayOrder)
            @Html.ValidationMessageFor(model => model.DisplayOrder)
        </td>
    </tr>
</table>

